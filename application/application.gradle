import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

plugins {
    id 'application'
}

apply plugin: "com.github.johnrengelman.shadow"

group 'example'
version '0.1'

repositories {
    mavenCentral()
}

jar {
    setArchivesBaseName("kotlin-micronaut-example")
}

configurations {
    devOnly
}

mainClassName = "example.api.ApiApplicationKt"

dependencies {
    devOnly platform("io.micronaut:micronaut-bom:$micronautVersion")

    implementation project(':api')

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation 'io.micronaut:micronaut-security-jwt'

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt 'io.micronaut:micronaut-security'
}

sourceSets {
    devOnly {
        kotlin.srcDirs = ['dev-src']
        resources.srcDirs = ['dev-res']
        java.srcDirs = [] // disable java devOnly dirs
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

shadowJar {
    mergeServiceFiles()
    transform(Log4j2PluginsCacheFileTransformer)
}

task buildZip(type: Zip) {
    from sourceSets.main.output
    into('lib') {
        from configurations.compileClasspath
        from configurations.runtimeClasspath
    }
}

shadowJar.dependsOn buildZip

run.dependsOn(processDevOnlyResources)

run {
    classpath += configurations.devOnly                         // Adds devOnly libraries
    classpath += sourceSets.devOnly.runtimeClasspath            // Adds devOnly sources and resources
    classpath += fileTree("build/classes/kotlin/devOnly")
    // TODO: Fix this properly without having to specify path by hand

    // to activate: gradle application:run -PprintClasspath
    if (project.hasProperty("printClasspath")) {
        println(classpath.elements.get().join("\n"))
    }

    jvmArgs('-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Dcom.sun.management.jmxremote',
            '-Dmicronaut.environments=dev')
}

task runDataFeeder(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "example.core.RunMigrator"

    jvmArgs('-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Dcom.sun.management.jmxremote',
            '-Dmicronaut.environments=dev')
}
